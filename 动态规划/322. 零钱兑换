class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<int> f(amount+1);                                   //数组开的大小要注意加一
        f[0]=0;                                                    //初始条件
        for(int i=1;i<=amount;++i){
            f[i]=INT_MAX;                                          //下面转移方程要求出最小值，所以先假定最大值！！！也可以在vector创建时构造
            for(int j=0;j<n;++j){
                if(i>=coins[j]&&f[i-coins[j]]!=INT_MAX){           //边界条件1：数组下标不能越界。边界条件2：防止转移方程出现最大值加1溢出的问题
                   f[i]=min(f[i],f[i-coins[j]]+1);                 //注意这里是如何处理的，自底向上计算
                }
            }
        }
        if(f[amount]==INT_MAX){                     //注意返回结果是f[amount]，不要忘记开辟数组的含义
            f[amount]=-1;
        }

    return f[amount];
    }
};
